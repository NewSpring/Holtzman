machine:
  node:
    version: 0.10.41
  python:
    version: 2.7.10

dependencies:
  cache_directories:
    - "node_modules/"
    - "~/.norma"
    - ../.meteor
    - "./.meteor/local/plugin-cache/"
    - "./.meteor/local/webpack-npm/node_modules/"
  pre:
    # install meteor
    - if [ ! -f $HOME/.meteor/meteor ]; then curl https://install.meteor.com | sh; fi
    - sudo ln -s $HOME/.meteor/meteor /usr/bin/meteor

    # install norma
    - npm install -g normajs@1.7.10 && norma build
    - curl -L https://github.com/rancher/rancher-compose/releases/download/v0.7.2/rancher-compose-linux-386-v0.7.2.tar.gz | tar xvz && mv rancher-compose-v0.7.2/rancher-compose ~/bin/ && chmod +x ~/bin/rancher-compose
    - rancher-compose -v

    # remove packages for gagarin work around
    - cp ./.remote/settings/sites/my.newspring.cc/production.settings.json ./settings.json
    - meteor build --directory ./.gagarin/local --server localhost:3000
    - cd ./.gagarin/local/bundle/programs/server/ && npm i

  post:
    # install chromedriver
    - wget https://chromedriver.storage.googleapis.com/2.20/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip

    # run chromedriver
    - ./chromedriver:
        background: true

test:
  override:
    - ./node_modules/.bin/gagarin --verbose --skip-build --timeout=10000 --settings ./settings.json
    # - echo "you can do it"

deployment:
  ecs:
    branch: master
    commands:
      - aws --version
      - aws configure set default.aws_access_key_id $AWS_ACCESS_KEY
      - aws configure set default.aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set default.region us-east-1
      - rm -rf ./settings.json && cp ./.remote/settings/sites/my.newspring.cc/production.settings.json ./settings.json

      # - meteor add mycartio:newrelic
      - npm prune --production
      - meteor build .build --architecture os.linux.x86_64 --server my.newspring.cc
      # hacky way to add newrelic support
      - cd .build && tar xzf *.tar.gz && cd bundle/programs/server && chmod 777 package.json && npm i --save newrelic && chmod 777 boot.js && echo "$(echo 'if (process.env.NEW_RELIC_LICENSE_KEY) { require("newrelic") }' | cat - boot.js)" > boot.js
      - rm -rf .build/$CIRCLE_PROJECT_REPONAME.tar.gz
      - cd .build && tar -cvzf $CIRCLE_PROJECT_REPONAME.tar.gz bundle
      # end hack
      - aws s3 cp .build/$CIRCLE_PROJECT_REPONAME.tar.gz s3://ns.ops/apollos/$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH-$CIRCLE_SHA1.tar.gz --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
      - python --version
      - pip install boto3
      - BUNDLE_URL="http://ns.ops.s3.amazonaws.com/apollos/$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH-$CIRCLE_SHA1.tar.gz" .ecs/update_ecs.sh
