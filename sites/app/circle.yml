general:
  branches:
    only:
      # - master # list of branches to build
      - beta
      - alpha

machine:
  xcode:
    version: 7.1

  pre:
    # brew
    - brew install brew-cask

    # meteor
    - if [ ! -f $HOME/.meteor/meteor ]; then curl https://install.meteor.com | sh; fi

    # chrome
    - brew cask install google-chrome
    - brew install chromedriver

dependencies:
  cache_directories:
    - "node_modules/"
    - "~/.norma"
    - ../.meteor
    - "./.meteor/local/plugin-cache/"
    - "./.meteor/local/webpack-npm/node_modules/"
    - "~/.gem"
    # - "./.notfastlane"
    # - "./.launch"
  pre:
    # install node
    - brew install homebrew/versions/node4-lts && brew unlink node4-lts
    - brew install homebrew/versions/node010

    - npm install

    # install norma
    - npm install -g NewSpring/Norma#forked-cson && norma build

    # remove packages for gagarin work around
    - meteor remove-platform ios android
    # - npm install -g gagarin
    - cp ./.remote/settings/sites/app.newspring.io/alpha.settings.json ./settings.json
    # - meteor build --directory ./.gagarin/local --server localhost:3000
    # - cd ./.gagarin/local/bundle/programs/server/ && npm i

  # install mongodb 3.0
  # override:
  #   - sudo apt-get purge mongodb-org*
  #   - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  #   - echo "deb http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list
  #   - sudo apt-get update
  #   - sudo apt-get install -y mongodb-org
  #   - sudo service mongod restart


test:
  # create mongodb from dump
  pre:
    - chromedriver --port=9515:
       background: true
    # - mongodump -h $REMOTE_MONGO -u $REMOTE_MONGO_USER -p $REMOTE_MONGO_PASSWORD -d alpha --ssl --excludeCollection=accounts --excludeCollection=campuses --excludeCollection=clusterEndpoints --excludeCollection=definedValues --excludeCollection=groupLocations --excludeCollection=groupMembers --excludeCollection=groups --excludeCollection=groupTypes --excludeCollection=locations --excludeCollection=paymentDetails --excludeCollection=people --excludeCollection=queuedApiRequests --excludeCollection=savedAccounts --excludeCollection=scheduledTransactions --excludeCollection=serverWatches --excludeCollection=status --excludeCollection=TestCollection --excludeCollection=transactions
    # - cd dump/alpha/ && mongorestore -h 127.0.0.1:3001 -d meteor .
  override:
    # - npm test
    - echo "i am not testing"

deployment:
  alpha:
    branch: alpha
    commands:
      - brew unlink node010 && brew link node4-lts

      - meteor add-platform ios android

      # android
      - brew install android-sdk
      - echo export ANDROID_HOME=/usr/local/opt/android-sdk >> ~/.bashrc
      - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-23.0.2,android-23,extra-google-m2repository,extra-google-google_play_services,extra-android-support
      - echo export ANDROID_ZIPALIGN=/usr/local/opt/android-sdk/build-tools/23.0.2/zipalign >> ~/.bashrc

      # server
      - npm install -g mupx
      # settings moved in test
      - cp ./.remote/settings/sites/app.newspring.io/alpha.mup.json ./mup.json
      - cp ./.remote/settings/sites/app.newspring.io/apollos.pem ./apollos.pem
      - cp ./.remote/settings/sites/app.newspring.io/compose.pem ./compose.pem
      - cp ./.remote/settings/ssl/bundle.crt .
      - cp ./.remote/settings/ssl/private.key .
      - mupx deploy

      # app launch system
      - if [ ! -f $HOME/.launch ]; then git clone git@github.com:NewSpring/meteor-launch.git -b feature-mobile-settings .launch && cd .launch && npm install && npm link; fi
      - cp ./.remote/settings/sites/app.newspring.io/launch.json ./launch.json

      # fastlane
      # fastlane is pre-installed now
      - sudo gem update fastlane
      - if [ ! -f $HOME/.notfastlane ]; then git clone -b launch-version git@github.com:johnthepink/fastlane.git .notfastlane; fi

      # hockey
      - cp ./.remote/settings/sites/app.newspring.io/androidkey ~/.keystore
      - launch hockey https://alpha-app.newspring.io ./.remote/settings/sites/app.newspring.io/alpha.settings.json

  beta:
    branch: beta
    commands:
      - brew unlink node010 && brew link node4-lts

      - meteor add-platform ios android

      # android
      - brew install android-sdk
      - echo export ANDROID_HOME=/usr/local/opt/android-sdk >> ~/.bashrc
      - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-23.0.2,android-22,extra-google-m2repository,extra-google-google_play_services,extra-android-support
      - echo export ANDROID_ZIPALIGN=/usr/local/opt/android-sdk/build-tools/23.0.2/zipalign >> ~/.bashrc

      # server
      - npm install -g mupx
      - cp ./.remote/settings/sites/app.newspring.io/beta.settings.json ./settings.json
      - cp ./.remote/settings/sites/app.newspring.io/beta.mup.json ./mup.json
      - cp ./.remote/settings/sites/app.newspring.io/apollos.pem ./apollos.pem
      - cp ./.remote/settings/sites/app.newspring.io/compose.pem ./compose.pem
      - cp ./.remote/settings/ssl/bundle.crt .
      - cp ./.remote/settings/ssl/private.key .
      - mupx deploy

      # app launch system
      - if [ ! -f $HOME/.launch ]; then git clone -b beta-setup git@github.com:NewSpring/meteor-launch.git .launch && cd .launch && npm install && npm link; fi
      - cp ./.remote/settings/sites/app.newspring.io/launch.json ./launch.json

      # fastlane
      # fastlane is pre-installed now
      - if [ ! -f $HOME/.notfastlane ]; then git clone -b launch-version git@github.com:johnthepink/fastlane.git .notfastlane; fi

      # hockey
      - cp ./.remote/settings/sites/app.newspring.io/androidkey ~/.keystore
      - launch testflight https://beta-app.newspring.io

  something:
    branch: circle-s3
    commands:

      - brew install awscli
      - aws --version
      - aws configure set default.aws_access_key_id $AWS_ACCESS_KEY
      - aws configure set default.aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set default.region us-east-1
      - meteor build .build --architecture os.linux.x86_64 --server https://alpha-app.newspring.io
      - aws s3 cp .build/$CIRCLE_PROJECT_REPONAME.tar.gz s3://ns.ops/apollos/$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH-$CIRCLE_SHA1.tar.gz
