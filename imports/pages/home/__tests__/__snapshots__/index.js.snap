exports[`test renders feed skeleton if loading 1`] = `
<Connect(ApollosPullToRefreshWithoutData)
  handleRefresh={[Function]}>
  <Connect(SplitContainer)
    classes={
      Array [
        "background--light-primary",
      ]
    }
    nav={true}>
    <Right
      aspect="square"
      classes={
        Array [
          "floating--bottom",
          "text-left",
          "background--dark-primary",
        ]
      }
      mobile={true}
      ratioClasses={
        Array [
          "floating__item",
          "overlay__item",
          "one-whole",
          "soft@lap-and-up",
          "floating--bottom",
          "text-left",
        ]
      }>
      <HomeHero
        item={Object {}} />
    </Right>
  </Connect(SplitContainer)>
  <Left
    scroll={true}>
    <section
      className="background--light-secondary soft-half@palm soft@palm-wide-and-up soft-double@anchored">
      <div
        className="grid">
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItemSkeleton />
        </div>
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItemSkeleton />
        </div>
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItemSkeleton />
        </div>
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItemSkeleton />
        </div>
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItemSkeleton />
        </div>
      </div>
    </section>
  </Left>
</Connect(ApollosPullToRefreshWithoutData)>
`;

exports[`test renders with props 1`] = `
<Connect(ApollosPullToRefreshWithoutData)
  handleRefresh={[Function]}>
  <Connect(SplitContainer)
    classes={
      Array [
        "background--light-primary",
      ]
    }
    nav={true}>
    <Right
      aspect="square"
      background="http://test.com/1x1.jpg"
      classes={
        Array [
          "floating--bottom",
          "text-left",
          "background--dark-primary",
        ]
      }
      link="/articles/1"
      mobile={true}
      ratioClasses={
        Array [
          "floating__item",
          "overlay__item",
          "one-whole",
          "soft@lap-and-up",
          "floating--bottom",
          "text-left",
        ]
      }>
      <HomeHero
        item={
          Object {
            "channelName": "articles",
            "content": Object {
              "images": Array [
                Object {
                  "fileLabel": "1:1",
                  "url": "http://test.com/1x1.jpg",
                },
              ],
            },
            "entryId": "1",
          }
        } />
    </Right>
  </Connect(SplitContainer)>
  <Left
    scroll={true}>
    <section
      className="background--light-secondary soft-half@palm soft@palm-wide-and-up soft-double@anchored">
      <div
        className="grid">
        <div
          className="grid__item one-half@palm-wide-and-up flush-bottom@palm push-half-bottom@palm-wide push-bottom@portable push-bottom@anchored">
          <FeedItem
            item={
              Object {
                "channelName": "articles",
                "content": Object {
                  "images": Array [
                    Object {
                      "fileLabel": "1:1",
                      "url": "http://test.com/1x1.jpg",
                    },
                  ],
                },
                "entryId": "2",
              }
            } />
        </div>
      </div>
    </section>
  </Left>
</Connect(ApollosPullToRefreshWithoutData)>
`;
