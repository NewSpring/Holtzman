// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parses query correctly 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "name": Object {
        "kind": "Name",
        "value": "GetPerson",
      },
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": Object {
              "kind": "Name",
              "value": "person",
            },
            "arguments": Array [
              Object {
                "kind": "Argument",
                "name": Object {
                  "kind": "Name",
                  "value": "cache",
                },
                "value": Object {
                  "kind": "BooleanValue",
                  "value": false,
                },
              },
            ],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "currentPerson",
            },
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "photo",
                  },
                  "selectionSet": null,
                },
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "firstName",
                  },
                  "selectionSet": null,
                },
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "nickName",
                  },
                  "selectionSet": null,
                },
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "lastName",
                  },
                  "selectionSet": null,
                },
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "home",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": null,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "city",
                        },
                        "selectionSet": null,
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
      "variableDefinitions": Array [],
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 166,
    "source": Source {
      "body": "
  query GetPerson {
    person: currentPerson (cache: false) {
      photo
      firstName
      nickName
      lastName
      home {
        city
      }
    }
  }
",
      "name": "GraphQL",
    },
    "start": 3,
  },
}
`;

exports[`renders with props 1`] = `
<Layout
  content={<mockConstructor />}
  onToggle={[Function]}
  onUpload={[Function]}
  person={
    Object {
      "photo": "http://test.com/photo.jpg",
    }
  }
  photo="test"
/>
`;

exports[`renders without person 1`] = `
<Layout
  content={<mockConstructor />}
  onToggle={[Function]}
  onUpload={[Function]}
  person={Object {}}
  photo="test"
/>
`;

exports[`renders without photo 1`] = `
<Layout
  content={<mockConstructor />}
  onToggle={[Function]}
  onUpload={[Function]}
  person={
    Object {
      "photo": "http://test.com/photo.jpg",
    }
  }
  photo="http://test.com/photo.jpg"
/>
`;
