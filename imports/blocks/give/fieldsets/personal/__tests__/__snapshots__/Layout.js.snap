exports[`Header renders default if no override 1`] = `
<h4
  className="text-center">
  Personal Details
</h4>
`;

exports[`Header renders override if override 1`] = `
<span>
  override
</span>
`;

exports[`Layout renders with props 1`] = `
<div>
  <div
    className="push-double@lap-and-up push">
    <span>
      header
    </span>
  </div>
  <span>
    child
  </span>
  <div
    className="soft-sides">
    <div
      className="grid">
      <div
        className="grid__item one-half">
        <div
          className="input input--active"
          data-spec="input-wrapper"
          style={Object {}}>
          <label
            htmlFor="firstName"
            style={Object {}}>
            First Name
          </label>
          <input
            className={undefined}
            data-spec="input"
            defaultValue="Jim"
            disabled={undefined}
            id="firstName"
            maxLength=""
            name="firstName"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="First Name"
            style={Object {}}
            type={undefined} />
        </div>
      </div>
      <div
        className="grid__item one-half">
        <div
          className="input"
          data-spec="input-wrapper"
          style={Object {}}>
          <label
            htmlFor="lastName"
            style={Object {}}>
            Last Name
          </label>
          <input
            className={undefined}
            data-spec="input"
            defaultValue={undefined}
            disabled={undefined}
            id="lastName"
            maxLength=""
            name="lastName"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Last Name"
            style={Object {}}
            type={undefined} />
        </div>
      </div>
    </div>
    <div
      className="input input--active"
      data-spec="input-wrapper"
      style={Object {}}>
      <label
        htmlFor="email"
        style={Object {}}>
        Email
      </label>
      <input
        className={undefined}
        data-spec="input"
        defaultValue="test@test.com"
        disabled={undefined}
        id="email"
        maxLength=""
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="user@email.com"
        style={Object {}}
        type="email" />
    </div>
    <div
      className="input input--active select_15p0e27">
      <label
        htmlFor="Campus"
        style={Object {}}>
        Campus
      </label>
      <select
        className={undefined}
        defaultValue="2"
        disabled={undefined}
        id="Campus"
        name="campus"
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="Campus"
        value={undefined}>
        <option
          style={
            Object {
              "display": "none",
            }
          }>
          
        </option>
      </select>
    </div>
  </div>
  <div>
    <button
      className="btn"
      disabled={false}
      onClick={[Function]}>
      Next
    </button>
  </div>
</div>
`;

exports[`NextButton renders disabled styles if no campusId 1`] = `
<div>
  <button
    className="btn--disabled"
    disabled={true}
    onClick={[Function]}>
    Next
  </button>
</div>
`;

exports[`NextButton renders disabled styles if no email 1`] = `
<div>
  <button
    className="btn--disabled"
    disabled={true}
    onClick={[Function]}>
    Next
  </button>
</div>
`;

exports[`NextButton renders disabled styles if no firstName 1`] = `
<div>
  <button
    className="btn--disabled"
    disabled={true}
    onClick={[Function]}>
    Next
  </button>
</div>
`;

exports[`NextButton renders enabled styles if everything present 1`] = `
<div>
  <button
    className="btn"
    disabled={false}
    onClick={[Function]}>
    Next
  </button>
</div>
`;
