exports[`test should accept custom classes thru classes prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  classes="test1 test2"
  preFill={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses="test1 test2 outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className="test1 test2 outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept format function thru prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  format={[Function]}
  preFill={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      format={[Function]}
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept multiple accounts through accounts prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "hello",
      },
      Object {
        "value": "world",
      },
    ]
  }
  preFill={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "hello",
          },
          Object {
            "value": "world",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value={null}>
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="hello">
            hello
          </option>
          <option
            value="world">
            world
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept preFill function thru prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  preFill={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      defaultValue="returned"
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input input--active soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          defaultValue="returned"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept saveFund function thru prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  preFill={[Function]}
  saveFund={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      onChange={[Function]}
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept selectVal function thru prop 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  preFill={[Function]}
  selectVal="hi"
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      selected="hi"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 input--active select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund"
          value="hi">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should accept state prop with id and fund 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  preFill={[Function]}
  state={
    Object {
      "fund": "dis-cool-account",
      "id": "dis-account",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="dis-account"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="dis-cool-account"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="dis-account"
          name="dis-cool-account" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="dis-account"
          maxLength=""
          name="dis-cool-account"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="dis-account_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="dis-account_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;

exports[`test should render with minimal props 1`] = `
<Primary
  accounts={
    Array [
      Object {
        "value": "main fund",
      },
    ]
  }
  preFill={[Function]}
  state={
    Object {
      "fund": "main",
      "id": "test",
    }
  }>
  <div>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      I\'d like to give
    </h3>
    <Input
      classes={
        Array [
          "soft-bottom",
          "input--active",
          "display-inline-block",
        ]
      }
      hideLabel={true}
      id="test"
      inputClasses="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
      name="main"
      placeholder="$0.00"
      style={
        Object {
          "maxWidth": "150px",
        }
      }
      type="tel">
      <div
        className="input soft-bottom input--active display-inline-block"
        data-spec="input-wrapper"
        style={
          Object {
            "maxWidth": "150px",
          }
        }>
        <RenderLabel
          hideLabel={true}
          id="test"
          name="main" />
        <input
          className="outlined--dotted outlined--light h3 hard-top flush-bottom text-dark-primary show-placeholder_1bkmqm1"
          data-spec="input"
          id="test"
          maxLength=""
          name="main"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="$0.00"
          style={
            Object {
              "maxWidth": "150px",
            }
          }
          type="tel" />
      </div>
    </Input>
    <h3
      className="text-dark-tertiary display-inline-block push-half-bottom push-half-right">
      to
    </h3>
    <Select
      classes={
        Array [
          "soft-bottom",
          "display-inline-block",
          "select_1rryh47",
        ]
      }
      hideLabel={true}
      id="test_select"
      inputClasses=" outlined--dotted outlined--light h3 hard-top flush-bottom"
      items={
        Array [
          Object {
            "value": "main fund",
          },
        ]
      }
      name="select-account"
      placeholder="select fund"
      value="main fund">
      <div
        className="input soft-bottom display-inline-block select_1rryh47 select_15p0e27">
        <select
          className=" outlined--dotted outlined--light h3 hard-top flush-bottom"
          id="test_select"
          name="select-account"
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="select fund">
          <option
            style={
              Object {
                "display": "none",
              }
            }>
            select fund
          </option>
          <option
            value="main fund">
            main fund
          </option>
        </select>
      </div>
    </Select>
  </div>
</Primary>
`;
