exports[`test cardClasses appends additional item classes 1`] = `"card three four"`;

exports[`test cardClasses renders defaults 1`] = `"card"`;

exports[`test createImage renders default 1`] = `
<ImageLoader
  imageclasses={
    Array [
      "background--fill",
      "card__image",
      "locked-ends@lap-wide-and-up",
      "locked-sides@lap-wide-and-up",
      "locked-ends@palm-wide",
      "locked-sides@palm-wide",
      "relative@palm",
      "relative@lap",
      "ratio--landscape",
    ]
  }
  preloader={[Function]}
  renderElement={[Function]}
  src="http://test.com/1x1.jpg"
  style={
    Object {
      "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
    }
  }
  wrapper={[Function]} />
`;

exports[`test createImage uses custom ratio class 1`] = `
<ImageLoader
  imageclasses={
    Array [
      "background--fill",
      "card__image",
      "locked-ends@lap-wide-and-up",
      "locked-sides@lap-wide-and-up",
      "locked-ends@palm-wide",
      "locked-sides@palm-wide",
      "relative@palm",
      "relative@lap",
      "myRatio",
    ]
  }
  preloader={[Function]}
  renderElement={[Function]}
  src="http://test.com/1x1.jpg"
  style={
    Object {
      "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
    }
  }
  wrapper={[Function]} />
`;

exports[`test createImage uses default image if no images 1`] = `
<ImageLoader
  imageclasses={
    Array [
      "background--fill",
      "card__image",
      "locked-ends@lap-wide-and-up",
      "locked-sides@lap-wide-and-up",
      "locked-ends@palm-wide",
      "locked-sides@palm-wide",
      "relative@palm",
      "relative@lap",
      "ratio--landscape",
    ]
  }
  preloader={[Function]}
  renderElement={[Function]}
  src="http://test.com/default.jpg"
  style={
    Object {
      "backgroundImage": "url(\'http://test.com/default.jpg\')",
    }
  }
  wrapper={[Function]} />
`;

exports[`test itemClasses appends additional item classes 1`] = `"card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored one two"`;

exports[`test itemClasses renders defaults 1`] = `"card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"`;

exports[`test overrides item theme 1`] = `
<div
  className="card"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <div
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </div>
  <div
    className="myItem"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test overrides with styles 1`] = `
<div
  className="card"
  style={
    Object {
      "color": "orange",
    }
  }>
  <div
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </div>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test overrides with theme 1`] = `
<div
  className="override me"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <div
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </div>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test renders link version 1`] = `
<div
  className="card"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <Link
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored"
    onlyActiveOnIndex={false}
    style={Object {}}
    to="http://test.com/link">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </Link>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test renders link version with item theme override 1`] = `
<div
  className="card"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <Link
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored"
    onlyActiveOnIndex={false}
    style={Object {}}
    to="http://test.com/link">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </Link>
  <div
    className="myOtherItem"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test renders link version with style override 1`] = `
<div
  className="card"
  style={
    Object {
      "color": "blue",
    }
  }>
  <Link
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored"
    onlyActiveOnIndex={false}
    style={Object {}}
    to="http://test.com/link">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </Link>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test renders link version with theme override 1`] = `
<div
  className="override link"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <Link
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored"
    onlyActiveOnIndex={false}
    style={Object {}}
    to="http://test.com/link">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </Link>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;

exports[`test should render with props 1`] = `
<div
  className="card"
  style={
    Object {
      "overflow": "hidden",
    }
  }>
  <div
    className="relative@lap relative@palm plain locked-ends@lap-wide-and-up locked-right@lap-wide-and-up locked-ends@palm-wide locked-right@palm-wide one-whole@lap one-whole@palm two-fifths@lap-wide two-fifths@palm-wide one-half@anchored">
    <ImageLoader
      imageclasses={
        Array [
          "background--fill",
          "card__image",
          "locked-ends@lap-wide-and-up",
          "locked-sides@lap-wide-and-up",
          "locked-ends@palm-wide",
          "locked-sides@palm-wide",
          "relative@palm",
          "relative@lap",
          "ratio--landscape",
        ]
      }
      preloader={[Function]}
      renderElement={[Function]}
      src="http://test.com/1x1.jpg"
      style={
        Object {
          "backgroundImage": "url(\'http://test.com/1x1.jpg\')",
        }
      }
      wrapper={[Function]} />
  </div>
  <div
    className="card__item soft text-left soft-double@anchored one-whole@palm one-whole@lap three-fifths@lap-wide three-fifths@palm-wide one-half@anchored"
    style={
      Object {
        "color": "red",
      }
    }>
    <h1>
      test
    </h1>
  </div>
</div>
`;
