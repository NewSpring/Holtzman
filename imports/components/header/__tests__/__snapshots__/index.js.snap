exports[`test renders NewSpring text version 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <h6
      className="flush hard text-dark-primary uppercase one-whole"
      style={
        Object {
          "fontWeight": 900,
          "letterSpacing": "1px",
        }
      }>
      NewSpring Church
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders default text version 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <h6
      className="flush hard text-dark-primary uppercase one-whole"
      style={
        Object {
          "fontWeight": 900,
          "letterSpacing": "1px",
        }
      }>
      NewSpring Church
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders isSearch version 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "0px",
        "paddingTop": "0px",
      }
    }>
    <form
      action={true}
      className="hard-ends soft-sides"
      onSubmit={[Function]}>
      <div
        className="input hard-bottom">
        <i
          className="icon-search locked-left push-half-top text-light-primary" />
        <input
          autoComplete="off"
          className="h5 text-light-primary"
          id="search"
          name="search"
          placeholder="Type your search here..."
          style={
            Object {
              "borderBottom": "none",
              "marginTop": "7px",
              "paddingLeft": "30px",
            }
          }
          type="text" />
      </div>
    </form>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders light version 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <h6
      className="flush-bottom soft-sides text-light-primary"
      style={
        Object {
          "fontWeight": 700,
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }>
      test
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders live version 1`] = `<Connect(Apollo(LiveWithoutData)) />`;

exports[`test renders searching version 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <button
      className="locked-right push-right text-light-secondary"
      onClick={[Function]}
      style={
        Object {
          "marginTop": "13px",
          "zIndex": 1,
        }
      }>
      <small>
        Cancel
      </small>
    </button>
    <h6
      className="flush-bottom soft-sides text-dark-primary"
      style={
        Object {
          "fontWeight": 700,
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }>
      test
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders subtext if present 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <h6
      className="flush-bottom soft-sides text-dark-primary"
      style={
        Object {
          "fontWeight": 700,
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }>
      test
    </h6>
  </div>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "paddingBottom": "8px",
        "paddingTop": "8px",
        "position": "relative",
        "zIndex": 100,
      }
    }>
    <h6
      className="flush-bottom soft-sides text-dark-primary"
      style={
        Object {
          "fontWeight": "normal",
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }>
      some subtext
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test renders with props 1`] = `
<div
  style={
    Object {
      "position": "relative",
      "zIndex": 100,
    }
  }>
  <div
    className="text-center"
    style={
      Object {
        "backgroundColor": "green",
        "borderBottom": "1px solid rgba(0,0,0, 0.1)",
        "paddingBottom": "15px",
        "paddingTop": "15px",
      }
    }>
    <h6
      className="flush-bottom soft-sides text-dark-primary"
      style={
        Object {
          "fontWeight": 700,
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }>
      test
    </h6>
  </div>
  <Connect(Apollo(LiveWithoutData)) />
</div>
`;

exports[`test showSettings returns if showSettings 1`] = `
<Link
  className="text-light-primary plain soft-half-top soft-half-right overlay__item locked-top locked-right"
  onlyActiveOnIndex={false}
  style={Object {}}
  to="/profile/settings">
  <i
    className="icon-settings h4" />
</Link>
`;
