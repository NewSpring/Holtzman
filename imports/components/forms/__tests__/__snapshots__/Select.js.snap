exports[`test allows deselect 1`] = `
<div
  className="input select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option />
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test appends extra classes 1`] = `
<div
  className="input append me select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test can hide the label 1`] = `
<div
  className="input select_15p0e27">
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test has active state 1`] = `
<div
  className="input input--active select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test has error state 1`] = `
<div
  className="input input--alert select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test has focused state 1`] = `
<div
  className="input input--focused select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test includes blank 1`] = `
<div
  className="input select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      style={
        Object {
          "display": "none",
        }
      } />
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test includes placeholder 1`] = `
<div
  className="input select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myPlaceholder"
    value={null}>
    <option
      style={
        Object {
          "display": "none",
        }
      }>
      myPlaceholder
    </option>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test is active if selected prop 1`] = `
<div
  className="input input--active select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value="2">
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test overrides with theme if present 1`] = `
<div
  className="override select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;

exports[`test renderHepText returns when error and error text 1`] = `
<span
  className="input__status">
  error
</span>
`;

exports[`test renderHepText returns when status 1`] = `
<span
  className="input__status">
  some status
</span>
`;

exports[`test renders with props 1`] = `
<div
  className="input select_15p0e27">
  <Label
    labelFor="2"
    labelName="myLabel" />
  <select
    className="input classes"
    defaultValue={null}
    id="2"
    name="myName"
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="myLabel"
    value={null}>
    <option
      className="one two"
      value="1">
      1
    </option>
    <option
      className="one two"
      value="2">
      2
    </option>
  </select>
</div>
`;
